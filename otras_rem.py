# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'otras_rem.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(405, 312)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.frame_2)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_2 = QtWidgets.QLabel(self.frame_2)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_2.addWidget(self.label_2)
        self.fecha_doc = QtWidgets.QDateEdit(self.frame_2)
        self.fecha_doc.setReadOnly(True)
        self.fecha_doc.setObjectName("fecha_doc")
        self.horizontalLayout_2.addWidget(self.fecha_doc)
        spacerItem = QtWidgets.QSpacerItem(176, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem)
        self.label_3 = QtWidgets.QLabel(self.frame_2)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_2.addWidget(self.label_3)
        self.id_visible = QtWidgets.QLineEdit(self.frame_2)
        self.id_visible.setMaximumSize(QtCore.QSize(30, 16777215))
        self.id_visible.setReadOnly(True)
        self.id_visible.setObjectName("id_visible")
        self.horizontalLayout_2.addWidget(self.id_visible)
        self.verticalLayout_2.addWidget(self.frame_2)
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setObjectName("groupBox")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.groupBox)
        self.verticalLayout.setObjectName("verticalLayout")
        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setObjectName("formLayout")
        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setObjectName("label")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label)
        self.trabajador = QtWidgets.QComboBox(self.groupBox)
        self.trabajador.setObjectName("trabajador")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.trabajador)
        self.label_6 = QtWidgets.QLabel(self.groupBox)
        self.label_6.setObjectName("label_6")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_6)
        self.nota = QtWidgets.QPlainTextEdit(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.nota.sizePolicy().hasHeightForWidth())
        self.nota.setSizePolicy(sizePolicy)
        self.nota.setObjectName("nota")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.nota)
        self.label_5 = QtWidgets.QLabel(self.groupBox)
        self.label_5.setObjectName("label_5")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_5)
        self.monto = QtWidgets.QDoubleSpinBox(self.groupBox)
        self.monto.setMinimum(0.0)
        self.monto.setMaximum(999998.99)
        self.monto.setSingleStep(0.01)
        self.monto.setObjectName("monto")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.monto)
        self.label_4 = QtWidgets.QLabel(self.groupBox)
        self.label_4.setObjectName("label_4")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_4)
        self.tipo_salarial = QtWidgets.QCheckBox(self.groupBox)
        self.tipo_salarial.setChecked(True)
        self.tipo_salarial.setObjectName("tipo_salarial")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.tipo_salarial)
        self.verticalLayout.addLayout(self.formLayout)
        self.verticalLayout_2.addWidget(self.groupBox)
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame)
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem1 = QtWidgets.QSpacerItem(17, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem1)
        self.borrar = QtWidgets.QPushButton(self.frame)
        self.borrar.setObjectName("borrar")
        self.horizontalLayout.addWidget(self.borrar)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem2)
        self.agregar = QtWidgets.QPushButton(self.frame)
        self.agregar.setObjectName("agregar")
        self.horizontalLayout.addWidget(self.agregar)
        spacerItem3 = QtWidgets.QSpacerItem(16, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem3)
        self.cancelar = QtWidgets.QPushButton(self.frame)
        self.cancelar.setObjectName("cancelar")
        self.horizontalLayout.addWidget(self.cancelar)
        spacerItem4 = QtWidgets.QSpacerItem(39, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem4)
        self.verticalLayout_2.addWidget(self.frame)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 405, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Registro de otras remuneraciones"))
        self.label_2.setText(_translate("MainWindow", "Fecha de documento:"))
        self.fecha_doc.setDisplayFormat(_translate("MainWindow", "dd-MM-yyyy"))
        self.label_3.setText(_translate("MainWindow", "ID:"))
        self.groupBox.setTitle(_translate("MainWindow", "Registro de comisión:"))
        self.label.setText(_translate("MainWindow", "Trabajador:"))
        self.trabajador.setToolTip(_translate("MainWindow", "<html><head/><body><p>Seleccione de este listado al trabajador que le quiera registrar la variación</p></body></html>"))
        self.label_6.setText(_translate("MainWindow", "Nota:"))
        self.nota.setToolTip(_translate("MainWindow", "<html><head/><body><p>Es obligartorio para agregar la variación que realice una nota. Todo monto que se otorgue por esta vía NO será computado como salario cotizable para la TSS. Pero, será tomado en cuenta como base para el cálculo del impuesto sobre la renta y para el cálculo de prestaciones laborales y derechos adquiridos.</p></body></html>"))
        self.label_5.setText(_translate("MainWindow", "Monto (DOP):"))
        self.monto.setToolTip(_translate("MainWindow", "<html><head/><body><p>Monto en pesos dominicanos a ser pagados al trabajador como otra remuneración. Esta remuneración es base de computo para el ISR solamente. No forma parte del salario para la Seguridad Social ni INFOTEP.</p></body></html>"))
        self.label_4.setText(_translate("MainWindow", "Tipo de remuneración:"))
        self.tipo_salarial.setToolTip(_translate("MainWindow", "<html><head/><body><p>Destildar esta opción solo si la remuneración que se va a pagar, legalmente no forma parte del salario ordinario. Con lo cual la remuneración <span style=\" font-weight:600;\">NO</span> será computado como salario cotizable para la TSS ni tampoco para el cálculo de prestaciones laborales y derechos adquiridos. Pero, <span style=\" font-weight:600;\">SÍ</span> será tomado en cuenta como base para el cálculo del impuesto sobre la renta. Ejemplos de otras remuneraciones no salariales son:</p><p>1) horas extras, según el Art. 85 del CT; (Usar módulo)</p><p>2) propina en hoteles y restaurantes, según el Art. 197 del CT; </p><p>3) salario de Navidad, según el Art. 219 del CT; (Usar Módulo)</p><p>4) participación en las utilidades de la empresa, según la jurisprudencia (SCJ 7 Ago. 1956, B. J. 555, Pág. 1607; SCJ 9 Oct. 1991, B. J. 971, Pág. 1413); (Usar módulo)</p><p>5) “incentivo gerencial anual”, “bono anual”, o cualquier pago que se hace una vez por año, según la jurisprudencia (3º SCJ 18 Ago. 1999, B. J. 1065, Pág. 591); </p><p>6) viáticos y reembolso de gastos que estén soportados con la evidencia de que son auténticamente gastos en la ejecución del servicio prestado, según la jurisprudencia (SCJ 9 Mar. 1984, B. J. 880, Pág. 585; 3º SCJ 14 Jun. 2000, B. J. 1075, Pág. 631); </p><p>7) uniformes, útiles y herramientas de trabajo, según la jurisprudencia (3º SCJ 29 May. 2002, B. J. 1098, Pág. 815); y </p><p>8) subsidios de la seguridad social por enfermedad, accidentes o maternidad, según la jurisprudencia (SCJ 22 Dic. 1971, B. J. 733, Pág. 3439).(Usar módulo)</p><p><br/></p></body></html>"))
        self.tipo_salarial.setText(_translate("MainWindow", "Forma parte del salario ordinario"))
        self.borrar.setToolTip(_translate("MainWindow", "<html><head/><body><p>Borra el registro activo.</p></body></html>"))
        self.borrar.setText(_translate("MainWindow", "Borrar"))
        self.agregar.setToolTip(_translate("MainWindow", "<html><head/><body><p>Presione este botón para agregar la variación.</p></body></html>"))
        self.agregar.setText(_translate("MainWindow", "Agregar"))
        self.cancelar.setToolTip(_translate("MainWindow", "<html><head/><body><p>Este botón cierra la pantalla actual.</p></body></html>"))
        self.cancelar.setText(_translate("MainWindow", "Cancelar"))
